[
  {
    "Id": 10717,
    "Title": "Functionality available only in Azure AD Graph APIs or other pre-existing service-specific REST endpoints",
    "Description": "Some functionality is not yet available in Microsoft Graph. If you don't see the functionality you're looking for, you can use the corresponding, pre-existing service-specific REST API endpoint. For Azure Active Directory, see Migrate Azure AD Graph apps to Microsoft Graph.  ",
    "WorkLoadArea": "General",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T21:45:22",
    "LastUpdatedDateTime": "2021-10-06T16:41:00",
    "State": "Active"
  },
  {
    "Id": 8967,
    "Title": "Error when querying bookingBusinesses",
    "Description": "Getting the list of bookingBusinesses fails with the following error code when an organization has several Bookings businesses and the account making the request is not an administrator:  {  \"error\": {     \"code\": \"ErrorExceededFindCountLimit\",     \"message\":       \"The GetBookingMailboxes request returned too many results. Please specify a query to limit the results.\",   } } ",
    "WorkLoadArea": "Customer booking",
    "WorkAround": "You can limit the set of businesses returned by the request by including a query parameter, for example:  GET https://graph.microsoft.com/beta/bookingBusinesses?query=Fabrikam ",
    "Link": null,
    "CreatedDateTime": "2021-04-13T18:04:01",
    "LastUpdatedDateTime": "2021-10-05T21:16:48",
    "State": "Active"
  },
  {
    "Id": 10791,
    "Title": "Conditional access policy requires consent to permission",
    "Description": "The Conditional Access Policy API currently requires consent to the Policy.Read.All permission to call the POST and PATCH methods. In the future, the Policy.ReadWrite.ConditionalAccess permission will enable you to read policies from the directory.",
    "WorkLoadArea": "Identity and access",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-19T19:07:35",
    "LastUpdatedDateTime": "2021-10-05T20:43:54",
    "State": "Active"
  },
  {
    "Id": 10754,
    "Title": "Transactional processing of requests is not supported",
    "Description": "Microsoft Graph does not currently support transactional processing of individual requests. The atomicityGroup property on individual requests will be ignored.",
    "WorkLoadArea": "JSON batching",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:22:52",
    "LastUpdatedDateTime": "2021-10-05T20:37:54",
    "State": "Active"
  },
  {
    "Id": 11040,
    "Title": "Azure AD activity reports can return an error",
    "Description": "When you have a valid Azure AD Premium license and call the directoryAudit, signIn, or provisioning Azure AD activity reports APIs, you might still encounter an error message similar to the following:   { \"error\": {         \"code\": \"Authentication_RequestFromNonPremiumTenantOrB2CTenant\",         \"message\": \"Neither tenant is B2C or tenant doesn't have premium license\",         \"innerError\": {             \"date\": \"2021-09-02T17:15:30\",             \"request-id\": \"73badd94-c0ca-4b09-a3e6-20c1f5f9a307\",             \"client-request-id\": \"73badd94-c0ca-4b09-a3e6-20c1f5f9a307\"         }     } } This error might also occur when retrieving the signInActivity property of the user resource; for example, https://graph.microsoft.com/beta/users?$select=signInActivity.  ",
    "WorkLoadArea": "Reports",
    "WorkAround": "This error is due to intermittent license check failures, which we are working to fix. As a temporary workaround, add the Directory.Read.All permission. This temporary workaround will not be required when the issue is resolved.",
    "Link": null,
    "CreatedDateTime": "2021-09-03T17:06:53",
    "LastUpdatedDateTime": "2021-10-05T20:31:49",
    "State": "Active"
  },
  {
    "Id": 9074,
    "Title": "Sensitivity label does not show up in the Teams UI",
    "Description": "Sensitivity\nLabels that are applied to Teams at times do not​ show up in the Teams\nUI, even though it can clearly be seen in both the underlying SharePoint site\nand in the Admin Center.",
    "WorkLoadArea": "Teamwork",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-04-20T18:37:39",
    "LastUpdatedDateTime": "2021-09-29T22:29:04",
    "State": "Active"
  },
  {
    "Id": 8972,
    "Title": "Error attaching large files to events",
    "Description": "An app with delegated permissions returns HTTP 403 Forbidden when attempting to attach large files to an Outlook message or event that is in a shared or delegated mailbox. With delegated permissions, createUploadSession succeeds only if the message or event is in the signed-in user's mailbox.",
    "WorkLoadArea": "Calendar",
    "WorkAround": "",
    "Link": null,
    "CreatedDateTime": "2021-04-13T20:03:49",
    "LastUpdatedDateTime": "2021-09-29T20:24:00",
    "State": "Active"
  },
  {
    "Id": 10745,
    "Title": "Clients cannot track changes to open extensions",
    "Description": "Clients cannot track changes to open extensions or registered schema extensions.",
    "WorkLoadArea": "Delta query",
    "WorkAround": "",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:57:11",
    "LastUpdatedDateTime": "2021-09-29T20:06:04",
    "State": "Active"
  },
  {
    "Id": 11066,
    "Title": "Accessing a user's drive before user accesses it leads to error",
    "Description": "First time access to a user's personal drive through Microsoft Graph before the user accesses their personal site through a browser leads to a 401 response.",
    "WorkLoadArea": "Files",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-09-08T08:20:09",
    "LastUpdatedDateTime": "2021-09-29T20:04:29",
    "State": "Active"
  },
  {
    "Id": 10753,
    "Title": "All individual requests must be synchronous",
    "Description": "All requests contained in a batch request must be run synchronously. If present, the respond-async preference will be ignored.",
    "WorkLoadArea": "JSON batching",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:21:53",
    "LastUpdatedDateTime": "2021-09-29T16:57:54",
    "State": "Active"
  },
  {
    "Id": 10759,
    "Title": "Pre-consent for CSP apps doesn't work in some customer tenants",
    "Description": "Under certain circumstances, pre-consent for CSP apps may not work for some of your customer tenants.For apps using delegated permissions, when using the app for the first time with a new customer tenant you might receive this error after sign-in: AADSTS50000: There was an error issuing a token.For apps using application permissions, your app can acquire a token, but unexpectedly gets an access denied message when calling Microsoft Graph.We are working to fix this issue as soon as possible, so that pre-consent will work for all your customer tenants.",
    "WorkLoadArea": "Authentication",
    "WorkAround": "To unblock development and testing you can use the following workaround.NOTE: This is not a permanent solution and is only intended to unblock development. This workaround will not be required once the aforementioned issue is fixed. This workaround does not need to be undone once the fix is in place.Open an Azure AD v2 PowerShell session and connect to your customer tenant by entering your admin credentials into the sign-in window. You can download and install Azure AD PowerShell V2 from here.Connect-AzureAd -TenantId {customerTenantIdOrDomainName}      2. Create the Microsoft Graph service principal.New-AzureADServicePrincipal -AppId 00000003-0000-0000-c000-000000000000",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:36:43",
    "LastUpdatedDateTime": "2021-09-24T22:14:08",
    "State": "Active"
  },
  {
    "Id": 10758,
    "Title": "Azure AD v2.0 endpoint is not supported for CSP apps",
    "Description": "Cloud solution provider (CSP) apps must acquire tokens from the Azure AD (v1) endpoints to successfully call Microsoft Graph in their partner-managed customers. Currently, acquiring a token through the newer Azure AD v2.0 endpoint is not supported.",
    "WorkLoadArea": "Authentication",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:31:21",
    "LastUpdatedDateTime": "2021-09-24T22:13:48",
    "State": "Active"
  },
  {
    "Id": 10736,
    "Title": "allowExternalSenders property cannot be set in a POST or PATCH operation",
    "Description": "There is currently an issue that prevents setting the allowExternalSenders property of a group in a POST or PATCH operation, in both /v1.0 and /beta.allowExternalsenders is an Exchange Online managed property (not an AAD group managed property). The data source of this property is in Substrate, so the default APIs to query this property will be the Outlook Rest APIs.Querying for this property can be done via the Outlook APIs, however there are known data gaps for querying this property using the Groups APIs.PATCH operations for allowexternalsenders property is a gap that needs to be bridged, but the POST operations need design and development work due to the technical limitations of the POST operations. Today the POST operation can only set the defualt value to false, and you are unable to set the value to true with the POST operation.",
    "WorkLoadArea": "Groups",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:14:25",
    "LastUpdatedDateTime": "2021-09-22T00:03:37",
    "State": "Active"
  },
  {
    "Id": 8970,
    "Title": "Partial support for adding and accessing ICS-based calendars in user's mailbox",
    "Description": "Currently, there is partial support for a calendar based on an Internet Calendar Subscription (ICS):You can add an ICS-based calendar to a user mailbox through the user interface, but not through the Microsoft Graph API.Listing the user's calendars lets you get the name, color and id properties of each calendar in the user's default calendar group, or a specified calendar group, including any ICS-based calendars. You cannot store or access the ICS URL in the calendar resource.You can also list the events of an ICS-based calendar.",
    "WorkLoadArea": "Calendar",
    "WorkAround": "Working on it",
    "Link": "https://docs.microsoft.com/en-us/graph/known-issues#partial-support-for-adding-and-accessing-ics-based-calendars-in-users-mailbox",
    "CreatedDateTime": "2021-04-13T18:40:45",
    "LastUpdatedDateTime": "2021-09-21T00:47:28",
    "State": "Active"
  },
  {
    "Id": 10657,
    "Title": "Request dependencies are limited",
    "Description": "Individual requests can depend on other individual requests. Currently, requests can only depend on a single other request, and must follow one of these three patterns:Parallel - no individual request states a dependency in the dependsOn property.Serial - all individual requests depend on the previous individual request.Same - all individual requests that state a dependency in the dependsOn property, state the same dependency. Note: Requests made using this pattern will run sequentially.As JSON batching matures, these limitations will be removed.",
    "WorkLoadArea": "JSON batching",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-12T15:44:25",
    "LastUpdatedDateTime": "2021-09-20T19:33:17",
    "State": "Active"
  },
  {
    "Id": 11142,
    "Title": "Claims mapping policy might require consent to permissions",
    "Description": "The claimsMappingPolicy API might require consent to both the Policy.Read.All and Policy.ReadWrite.ConditionalAccess permissions for the LIST /policies/claimsMappingPolicies and GET /policies/claimsMappingPolicies/{id} methods, as follows:If no claimsMappingPolicy objects are available to retrieve in a LIST operation, either permission is sufficient to call this method.If there are claimsMappingPolicy objects to retrieve, your app must consent to both permissions. If not, a 403 Forbidden error is returned.In the future, either permission will be sufficient to call both methods.",
    "WorkLoadArea": "Identity and access",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-09-14T17:54:38",
    "LastUpdatedDateTime": "2021-09-15T21:32:55",
    "State": "Active"
  },
  {
    "Id": 10789,
    "Title": "Revoke sign-in sessions returns wrong HTTP code",
    "Description": "The user: revokeSignInSessions API should return a 204 No content response for successful revocations, and an HTTP error code (4xx or 5xx) if anything goes wrong with the request. However, due to a service issue, this API returns a 200 OK and a Boolean parameter that is always true. ",
    "WorkLoadArea": "Users",
    "WorkAround": "Until this is fixed, developers are simply advised to treat any 2xx return code as success for this API.",
    "Link": null,
    "CreatedDateTime": "2021-08-19T17:45:05",
    "LastUpdatedDateTime": "2021-09-14T21:48:28",
    "State": "Active"
  },
  {
    "Id": 10734,
    "Title": "Access to user resources is delayed after creation",
    "Description": "Users can be created immediately through a POST on the user entity. A Microsoft 365 license must first be assigned to a user, in order to get access to Microsoft 365 services. Even then, due to the distributed nature of the service, it might take 15 minutes before files, messages and events entities are available for use for this user, through the Microsoft Graph API. During this time, apps will receive a 404 HTTP error response.",
    "WorkLoadArea": "Users",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:02:49",
    "LastUpdatedDateTime": "2021-09-14T21:45:16",
    "State": "Active"
  },
  {
    "Id": 10723,
    "Title": "Access to a user's profile photo is limited",
    "Description": "Reading and updating a user's profile photo is only possible if the user has a mailbox. Additionally, any photos that may have been previously stored using the thumbnailPhoto property (using the Azure AD Graph or through AD Connect synchronization) are no longer accessible through the Microsoft Graph photo property of the user resource. Failure to read or update a photo, in this case, would result in the following error:{  \"error\": {    \"code\": \"ErrorNonExistentMailbox\",    \"message\": \"The SMTP address has no mailbox associated with it.\"  }}",
    "WorkLoadArea": "Users",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T23:30:05",
    "LastUpdatedDateTime": "2021-09-14T21:44:52",
    "State": "Active"
  },
  {
    "Id": 10675,
    "Title": "Some properties for chat members might be missing in the response to a GET request",
    "Description": "In certain instances, the tenantId/email/displayName property for the individual members of a chat might not be populated on a GET /chats/chat-id/members or GET /chats/chat-id/members/membership-id request.",
    "WorkLoadArea": "Teamwork",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-13T17:40:48",
    "LastUpdatedDateTime": "2021-09-14T21:43:01",
    "State": "Active"
  },
  {
    "Id": 10662,
    "Title": "Some limitations apply to query parameters",
    "Description": "The following limitations apply to query parameters:Multiple namespaces are not supported.GETs on $ref and casting are not supported on users, groups, devices, service principals and applications.@odata.bind is not supported. This means that developers won’t be able to properly set the acceptedSenders or rejectedSenders navigation property on a group.@odata.id is not present on non-containment navigations (like messages) when using minimal metadata.$expand:Returns a maximum of 20 objects.No support for @odata.nextLink.No support for more than 1 level of expand.No support with extra parameters ($filter, $select).$filter:/attachments endpoint does not support filters. If present, the $filter parameter is ignored.Cross-workload filtering is not supported.$search:Full-text search is only available for a subset of entities such as messages.Cross-workload searching is not supported.Searching is not supported on Azure AD B2C tenants.$count:Not supported on Azure AD B2C tenants.When using the $count=true query string when querying against directory resources, the @odata.count property will be present only in the first page of the paged data.Query parameters specified in a request might fail silently. This can be true for unsupported query parameters as well as for unsupported combinations of query parameters.",
    "WorkLoadArea": "Query parameters",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-12T17:54:26",
    "LastUpdatedDateTime": "2021-09-14T21:41:28",
    "State": "Active"
  },
  {
    "Id": 10740,
    "Title": "The comment parameter for creating a draft does not become part of the message body",
    "Description": "The comment parameter for creating a reply or forward draft (createReply, createReplyAll, createForward) does not become part of the body of the resultant message draft.",
    "WorkLoadArea": "Mail",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:44:55",
    "LastUpdatedDateTime": "2021-09-14T21:40:08",
    "State": "Active"
  },
  {
    "Id": 10661,
    "Title": "Accessing and updating deployment audiences is not supported",
    "Description": "Accessing and updating deployment audiences on deployment resources created via Intune is not currently supported.Listing deployment audience members and listing deployment audience exclusions returns 404 Not Found.Updating deployment audience members and exclusions or updating by ID returns 202 Accepted but the audience is not updated.",
    "WorkLoadArea": "Devices and apps",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-12T16:58:28",
    "LastUpdatedDateTime": "2021-09-14T21:19:59",
    "State": "Active"
  },
  {
    "Id": 10743,
    "Title": "OData context is returned incorrectly",
    "Description": "OData context is sometimes returned incorrectly when tracking changes to relationships.",
    "WorkLoadArea": "Delta query",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:54:19",
    "LastUpdatedDateTime": "2021-09-14T21:19:44",
    "State": "Active"
  },
  {
    "Id": 10790,
    "Title": "Incomplete objects are returned when using getByIds request",
    "Description": "Requesting objects using Get directory objects from a list of IDs should return full objects. However, currently user objects on the v1.0 endpoint are returned with a limited set of properties.",
    "WorkLoadArea": "Users",
    "WorkAround": "As a temporary workaround, when you use the operation in combination with the $select query option, more complete user objects will be returned. This behavior is not in accordance with the OData specifications. Because this behavior might be updated in the future, use this workaround only when you provide $select= with all the properties you are interested in, and only if future breaking changes to this workaround are acceptable.",
    "Link": null,
    "CreatedDateTime": "2021-08-19T17:59:22",
    "LastUpdatedDateTime": "2021-09-14T20:56:59",
    "State": "Active"
  },
  {
    "Id": 10660,
    "Title": "Properties are missing in the list of teams that a user has joined",
    "Description": "The API call for me/joinedTeams returns only the id, displayName, and description properties of a team. To get all properties, use the Get team operation.",
    "WorkLoadArea": "Teamwork",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-12T16:12:43",
    "LastUpdatedDateTime": "2021-09-14T20:51:26",
    "State": "Active"
  },
  {
    "Id": 10720,
    "Title": "Attaching large files to messages with delegated permissions can fail",
    "Description": "An app with delegated permissions returns HTTP 403 Forbidden when attempting to attach large files to an Outlook message or event that is in a shared or delegated mailbox. With delegated permissions, createUploadSession succeeds only if the message or event is in the signed-in user's mailbox.",
    "WorkLoadArea": "Mail",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T22:37:10",
    "LastUpdatedDateTime": "2021-09-14T20:45:06",
    "State": "Active"
  },
  {
    "Id": 10751,
    "Title": "Filtering on schema extension properties is not supported on all entity types",
    "Description": "Filtering on schema extension properties (using the $filter expression) is not supported for Outlook entity types - contact, event, message, or post.",
    "WorkLoadArea": "Extensions",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:17:46",
    "LastUpdatedDateTime": "2021-09-14T20:36:10",
    "State": "Active"
  },
  {
    "Id": 10716,
    "Title": "Owner must be specified when updating a schemaExtension definition using Microsoft Graph Explorer",
    "Description": "When using PATCH to update a schemaExtension using Graph Explorer, you must specify the owner property and set it to its current appid value (which will need to be an appId of an application that you own). This is also the case for any client application whose appId is not the same as the owner.",
    "WorkLoadArea": "Extensions",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T21:31:03",
    "LastUpdatedDateTime": "2021-09-14T20:35:58",
    "State": "Active"
  },
  {
    "Id": 10748,
    "Title": "Unable to create a resource and open extension at the same time",
    "Description": "You cannot specify an open extension at the same time you create an instance of administrativeUnit, device, group, organization or user. You must first create the instance and then specify the open extension data in a subsequent POST request on that instance.",
    "WorkLoadArea": "Extensions",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:08:24",
    "LastUpdatedDateTime": "2021-09-14T20:35:46",
    "State": "Active"
  },
  {
    "Id": 10749,
    "Title": "Unable to create a resource instance and add schema extension data at the same time",
    "Description": "You cannot specify a schema extension in the same operation as creating an instance of contact, event, message, or post. You must first create the resource instance and then do a PATCH to that instance to add a schema extension and custom data.",
    "WorkLoadArea": "Extensions",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:09:49",
    "LastUpdatedDateTime": "2021-09-14T20:35:33",
    "State": "Active"
  },
  {
    "Id": 10744,
    "Title": "Schema extensions are not returned with select",
    "Description": "Schema extensions (legacy) are not returned with $select statement, but are returned without $select.",
    "WorkLoadArea": "Delta query",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:55:39",
    "LastUpdatedDateTime": "2021-09-14T20:31:24",
    "State": "Active"
  },
  {
    "Id": 10746,
    "Title": "Some limitations apply to the application and servicePrincipal resources",
    "Description": "Changes to the application and servicePrincipal entities currently in development. The following is a summary of current limitations and in-development API features.Current limitations:Some application properties (such as appRoles and addIns) will not be available until all changes are completed.Only multi-tenant apps can be registered.Updating apps is restricted to apps registered after the initial beta update.Azure Active Directory users can register apps and add additional owners.Support for OpenID Connect and OAuth protocols.Policy assignments to an application fail.Operations on ownedObjects that require appId fail (For example, users/{id|userPrincipalName}/ownedObjects/{id}/...).In development:Ability to register single tenant apps.Updates to servicePrincipal.Migration of existing Azure AD apps to updated model.Support for appRoles, pre-authorized clients, optional claims, group membership claims, and brandingMicrosoft account (MSA) users can register apps.Support for SAML and WsFed protocols.",
    "WorkLoadArea": "Applications",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:02:47",
    "LastUpdatedDateTime": "2021-09-14T20:27:14",
    "State": "Active"
  },
  {
    "Id": 11065,
    "Title": "View meeting details menu is not available on Microsoft Teams client",
    "Description": "The Microsoft Teams client does not show the View Meeting details menu for channel meetings created via the cloud communications API.",
    "WorkLoadArea": "Cloud communications",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-09-08T07:55:39",
    "LastUpdatedDateTime": "2021-09-14T17:56:37",
    "State": "Active"
  },
  {
    "Id": 10750,
    "Title": "Limit of 100 schema extension property values allowed per resource instance",
    "Description": "Directory resources, such as device, group and user, currently limit the total number of schema extension property values that can be set on a resource instance, to 100.",
    "WorkLoadArea": "Extensions",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:13:31",
    "LastUpdatedDateTime": "2021-09-14T16:51:14",
    "State": "Active"
  },
  {
    "Id": 10747,
    "Title": "Change tracking is not supported",
    "Description": "Change tracking (delta query) is not supported for open or schema extension properties.",
    "WorkLoadArea": "Extensions",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:07:23",
    "LastUpdatedDateTime": "2021-09-10T18:08:07",
    "State": "Active"
  },
  {
    "Id": 10721,
    "Title": "GET /teams is not supported",
    "Description": "To get a list of teams, see list all teams and list your teams.",
    "WorkLoadArea": "Teamwork",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T22:57:36",
    "LastUpdatedDateTime": "2021-09-07T17:46:54",
    "State": "Active"
  },
  {
    "Id": 10741,
    "Title": "GET messages returns chats in Microsoft Teams",
    "Description": "In both the v1 and beta endpoints, the response of GET /users/id/messages includes the user's Microsoft Teams chats that occurred outside the scope of a team or channel. These chat messages have \"IM\" as their subject.",
    "WorkLoadArea": "Mail",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:46:43",
    "LastUpdatedDateTime": "2021-09-07T17:41:45",
    "State": "Active"
  },
  {
    "Id": 10715,
    "Title": "Unable to filter team members by roles",
    "Description": "The filter query to get members of a team based on their roles GET /teams/team-id/members?$filter=roles/any(r:r eq 'owner') might not work. The server might respond with a BAD REQUEST.",
    "WorkLoadArea": "Teamwork",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T21:23:29",
    "LastUpdatedDateTime": "2021-09-07T17:36:39",
    "State": "Active"
  },
  {
    "Id": 11064,
    "Title": "Use the dollar ($) symbol in the userPrincipalName",
    "Description": "Microsoft Graph allows the userPrincipalName to begin with a dollar ($) character. However, when querying users by userPrincipalName, the request URL /users/$x@y.com fails. This is because this request URL violates the OData URL conventions which expects only system query options to be prefixed with a $ character. ",
    "WorkLoadArea": "Users",
    "WorkAround": "Remove the slash (/) after /users and enclose the userPrincipalName in parentheses and single quotes as follows: /users('$x@y.com').",
    "Link": null,
    "CreatedDateTime": "2021-09-08T07:39:38",
    "LastUpdatedDateTime": "2021-10-05T20:28:09",
    "State": "Resolved"
  },
  {
    "Id": 8974,
    "Title": "onlineMeetingUrl property is not supported for Microsoft Teams",
    "Description": "Currently, the onlineMeetingUrl property of a Skype meeting event would indicate the online meeting URL. However, that property for a Microsoft Teams meeting event is set to null.",
    "WorkLoadArea": "Calendar",
    "WorkAround": "The beta version offers a workaround, where you can use the onlineMeetingProvider property of an event to verify if the provider is Microsoft Teams. Through the onlineMeeting property of the event, you can access the joinUrl.",
    "Link": null,
    "CreatedDateTime": "2021-04-13T20:15:58",
    "LastUpdatedDateTime": "2021-09-21T12:02:09",
    "State": "Resolved"
  },
  {
    "Id": 8968,
    "Title": "Error accessing a shared calendar",
    "Description": "When attempting to access events in a calendar that has been shared by another user using the following operation:GET /users/{id}/calendars/{id}/eventsYou may get HTTP 500 with the error code ErrorInternalServerTransientError. The error occurs because:Historically, there are two ways that calendar sharing has been implemented, which, for the purpose of differentiating them, are referred to as the \"old\" approach and \"new\" approach.The new approach is currently available for sharing calendars with view or edit permissions, but not with delegate permissions.You can use the calendar REST API to view or edit shared calendars only if the calendars were shared using the new approach.You cannot use the calendar REST API to view or edit such calendars (or their events) if the calendars were shared using the old approach.",
    "WorkLoadArea": "Calendar",
    "WorkAround": "If a calendar was shared with view or edit permissions but using the old approach, you can now work around the error and manually upgrade the calendar sharing to use the new approach. Over time, Outlook will automatically upgrade all shared calendars to use the new approach, including calendars shared with delegate permissions.To manually upgrade a shared calendar to use the new approach, follow these steps:The recipient removes the calendar that was previously shared to them.The calendar owner re-shares the calendar in Outlook on the web, Outlook on iOS, or Outlook on Android.The recipient re-accepts the shared calendar using Outlook on the web. (It will be possible to use other Outlook clients soon.)The recipient verifies that the calendar has been re-shared successfully using the new approach by being able to view the shared calendar in Outlook on iOS or Outlook on Android.A calendar shared with you in the new approach appears as just another calendar in your mailbox. You can use the calendar REST API to view or edit events in the shared calendar, as if it's your own calendar. As an example:GET /me/calendars/{id}/events",
    "Link": null,
    "CreatedDateTime": "2021-04-13T18:31:54",
    "LastUpdatedDateTime": "2021-09-21T00:49:35",
    "State": "Resolved"
  },
  {
    "Id": 11039,
    "Title": "Removing a group owner also removes the user as a group member",
    "Description": "When DELETE /groups/{id}/owners is called for a group that is associated with a team, the user is also removed from the /groups/{id}/members list. To work around this, remove the user from both owners and members, then wait 10 seconds, then add them back to members.",
    "WorkLoadArea": "Groups",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-09-03T16:45:15",
    "LastUpdatedDateTime": "2021-09-20T19:32:19",
    "State": "Resolved"
  },
  {
    "Id": 10719,
    "Title": "Update notifications occur on creation and soft deletion of groups",
    "Description": "Subscriptions to changes for group with changeType set to updated will also receive notifications of changeType: updated on group creation and group soft deletion.",
    "WorkLoadArea": "Change notifications",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T22:31:46",
    "LastUpdatedDateTime": "2021-10-06T14:14:47",
    "State": "Wont Fix"
  },
  {
    "Id": 9027,
    "Title": "Update notifications occur on creation and soft deletion of users",
    "Description": "Subscriptions to changes for user with changeType set to updated will also receive notifications of changeType: updated on user creation and user soft deletion.",
    "WorkLoadArea": "Change notifications",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-04-15T21:39:58",
    "LastUpdatedDateTime": "2021-10-06T14:14:34",
    "State": "Wont Fix"
  },
  {
    "Id": 10755,
    "Title": "URIs must be relative",
    "Description": "Always specify relative URIs in batch requests. Microsoft Graph then makes these URLs absolute by using the version endpoint included in the batch URL.",
    "WorkLoadArea": "JSON batching",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:23:58",
    "LastUpdatedDateTime": "2021-10-05T20:40:53",
    "State": "Wont Fix"
  },
  {
    "Id": 10739,
    "Title": "GET operation does not return default contacts folder",
    "Description": "In the /v1.0 version, GET /me/contactFolders does not include the user's default contacts folder.",
    "WorkLoadArea": "Contacts",
    "WorkAround": "A fix will be made available. Meanwhile, you can use the following list contacts query and the parentFolderId property as a workaround to get the folder ID of the default contacts folder:GET https://graph.microsoft.com/v1.0/me/contacts?$top=1&$select=parentFolderIdIn the above query:/me/contacts?$top=1 gets the properties of a contact in the default contacts folder.Appending &$select=parentFolderId returns only the contact's parentFolderId property, which is the ID of the default contacts folder.",
    "Link": null,
    "CreatedDateTime": "2021-08-17T21:40:01",
    "LastUpdatedDateTime": "2021-09-29T20:07:54",
    "State": "Wont Fix"
  },
  {
    "Id": 10714,
    "Title": "Accessing contacts via a contact folder doesn't work in beta",
    "Description": "In the /beta version, there is currently an issue that prevents accessing a contact by specifying its parent folder in the REST request URL, as shown below.Accessing a contact contained in a child folder of a contactFolder. The example below shows one level of nesting, but a contact can be located in a child of a child and so on.GET /me/contactFolders/{id}/childFolders/{id}/.../contacts/{id}GET /users/{id | userPrincipalName}/contactFolders/{id}/childFolders/{id}/contacts/{id}",
    "WorkLoadArea": "Contacts",
    "WorkAround": "As an alternative, you can simply get the contact by specifying its ID as shown below, since GET /contacts in the /beta version applies to all the contacts in the user's mailbox:GET /me/contacts/{id}GET /users/{id | userPrincipalName}/contacts/{id}",
    "Link": null,
    "CreatedDateTime": "2021-08-16T21:14:15",
    "LastUpdatedDateTime": "2021-09-29T20:07:43",
    "State": "Wont Fix"
  },
  {
    "Id": 10756,
    "Title": "Batch size is limited",
    "Description": "JSON batch requests are currently limited to 20 individual requests.",
    "WorkLoadArea": "JSON batching",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:26:42",
    "LastUpdatedDateTime": "2021-09-29T19:19:54",
    "State": "Wont Fix"
  },
  {
    "Id": 10752,
    "Title": "Nested batches are not supported",
    "Description": "JSON batch requests must not contain any nested batch requests.",
    "WorkLoadArea": "JSON batching",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-17T22:19:44",
    "LastUpdatedDateTime": "2021-09-29T16:59:18",
    "State": "Wont Fix"
  },
  {
    "Id": 10722,
    "Title": "Microsoft Graph bypasses group policies configured through Outlook on the web",
    "Description": "Using Microsoft Graph to create and name a Microsoft 365 group bypasses any Microsoft 365 group policies that are configured through Outlook on the web.This is because there are Outlook naming policies that are not synced to AAD and only apply to groups provisioned in Outlook. Today we have naming policies as part of our Premium feature offerings. Prior\n     to these premium offerings there was a feature known as naming policy that\n     was available in Outlook online. Because there are also group types that are unique to Exchange (i.e. distribution groups) the naming policies for these group types are unique to Outlook and would not be applied to groups created in AAD.  Because of this, certain attributes of the Outlook naming policies are not synced back to AAD. Refer to Outlook documentation:Override the distribution group naming policy | Microsoft DocsCreate a distribution group naming policy | Microsoft Docs",
    "WorkLoadArea": "Groups",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T23:25:51",
    "LastUpdatedDateTime": "2021-09-21T23:56:52",
    "State": "Wont Fix"
  },
  {
    "Id": 10718,
    "Title": "Some group APIs don't support delegated or app-only permissions",
    "Description": "Only the API for core group administration and management supports access using delegated or app-only permissions. All other features of the group API support only delegated permissions.Examples of group features that support delegated and app-only permissions:Creating and deleting groupsGetting and updating group properties pertaining to group administration or managementGroup directory settings, type, and synchronizationGroup owners and membershipGetting group conversations and threadsExamples of group features that support only delegated permissions:Group events, photoExternal senders, accepted or rejected senders, group subscriptionUser favorites and unseen count",
    "WorkLoadArea": "Groups",
    "WorkAround": "Working on it",
    "Link": null,
    "CreatedDateTime": "2021-08-16T22:20:07",
    "LastUpdatedDateTime": "2021-09-20T19:32:40",
    "State": "Wont Fix"
  }
]